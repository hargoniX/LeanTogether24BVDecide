@inproceedings{bitwuzla,
  author       = {Aina Niemetz and
                  Mathias Preiner},
  editor       = {Constantin Enea and
                  Akash Lal},
  title        = {Bitwuzla},
  booktitle    = {Computer Aided Verification - 35th International Conference, {CAV}
                  2023, Paris, France, July 17-22, 2023, Proceedings, Part {II}},
  series       = {Lecture Notes in Computer Science},
  volume       = {13965},
  pages        = {3--17},
  publisher    = {Springer},
  year         = {2023},
  url          = {https://doi.org/10.1007/978-3-031-37703-7\_1},
  doi          = {10.1007/978-3-031-37703-7\_1},
  timestamp    = {Fri, 21 Jul 2023 17:55:59 +0200},
  biburl       = {https://dblp.org/rec/conf/cav/NiemetzP23.bib},
  bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{boolector,
  author    = {Aina Niemetz and
               Mathias Preiner and
               Armin Biere},
  title     = {Boolector 2.0},
  journal   = {J. Satisf. Boolean Model. Comput.},
  volume    = {9},
  number    = {1},
  pages     = {53--58},
  year      = {2014},
  url       = {https://doi.org/10.3233/sat190101},
  doi       = {10.3233/sat190101},
  biburl    = {https://dblp.org/rec/journals/jsat/NiemetzPB14.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@InProceedings{hollight,
author="Harrison, John",
editor="Berghofer, Stefan
and Nipkow, Tobias
and Urban, Christian
and Wenzel, Makarius",
title="HOL Light: An Overview",
booktitle="Theorem Proving in Higher Order Logics",
year="2009",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="60--66",
abstract="HOL Light is an interactive proof assistant for classical higher-order logic, intended as a clean and simplified version of Mike Gordon's original HOL system. Theorem provers in this family use a version of ML as both the implementation and interaction language; in HOL Light's case this is Objective CAML (OCaml). Thanks to its adherence to the so-called `LCF approach', the system can be extended with new inference rules without compromising soundness. While retaining this reliability and programmability from earlier HOL systems, HOL Light is distinguished by its clean and simple design and extremely small logical kernel. Despite this, it provides powerful proof tools and has been applied to some non-trivial tasks in the formalization of mathematics and industrial formal verification.",
isbn="978-3-642-03359-9"
}

@inproceedings{acl2bitblasting,
  title={Bit-Blasting ACL2 Theorems},
  author={Sol Swords and Jared Davis},
  booktitle={International Workshop on the ACL2 Theorem Prover and Its Applications},
  year={2011},
  url={https://api.semanticscholar.org/CorpusID:5754955}
}

@InProceedings{CoqQFBV,
author="Shi, Xiaomu
and Fu, Yu-Fu
and Liu, Jiaxiang
and Tsai, Ming-Hsien
and Wang, Bow-Yaw
and Yang, Bo-Yin",
editor="Silva, Alexandra
and Leino, K. Rustan M.",
title="CoqQFBV: A Scalable Certified SMT Quantifier-Free Bit-Vector Solver",
booktitle="Computer Aided Verification",
year="2021",
publisher="Springer International Publishing",
address="Cham",
pages="149--171",
abstract="We present a certified SMT  QF{\_}BV solver CoqQFBV built from a verified bit blasting algorithm, Kissat, and the verified SAT certificate checker GratChk in this paper. Our verified bit blasting algorithm supports the full QF{\_}BV logic of SMT-LIB; it is specified and formally verified in the proof assistant Coq . We compare CoqQFBV with CVC4, Bitwuzla, and Boolector on benchmarks from the QF{\_}BV division of the single query track in the 2020 SMT Competition, and real-world cryptographic program verification problems. CoqQFBV surprisingly solves more program verification problems with certification than the 2020 SMT  QF{\_}BV division winner Bitwuzla without certification.",
isbn="978-3-030-81688-9"
}

@inbook{SMTCoq,
  title = {A Modular Integration of SAT/SMT Solvers to Coq through Proof Witnesses},
  ISBN = {9783642253799},
  ISSN = {1611-3349},
  url = {http://dx.doi.org/10.1007/978-3-642-25379-9_12},
  DOI = {10.1007/978-3-642-25379-9_12},
  booktitle = {Certified Programs and Proofs},
  publisher = {Springer Berlin Heidelberg},
  author = {Armand,  Michael and Faure,  Germain and Grégoire,  Benjamin and Keller,  Chantal and Théry,  Laurent and Werner,  Benjamin},
  year = {2011},
  pages = {135–150}
}

@inproceedings{acl2aig,
  title={Verified AIG Algorithms in ACL2},
  author={Jared Davis and Sol Swords},
  booktitle={International Workshop on the ACL2 Theorem Prover and Its Applications},
  year={2013},
  url={https://api.semanticscholar.org/CorpusID:15299997}
}

@inproceedings{aigopt,
  title={Local Two-Level And-Inverter Graph Minimization without Blowup},
  author={Robert Brummayer and Armin Biere},
  year={2006},
  url={https://api.semanticscholar.org/CorpusID:14512831}
}

@inproceedings{cadical,
  author       = {Armin Biere and
                  Tobias Faller and
                  Katalin Fazekas and
                  Mathias Fleury and
                  Nils Froleyks and
                  Florian Pollitt},
  editor       = {Arie Gurfinkel and
                  Vijay Ganesh},
  title        = {{CaDiCaL 2.0}},
  booktitle    = {Computer Aided Verification - 36th International Conference, {CAV}
                  2024, Montreal, QC, Canada, July 24-27, 2024, Proceedings, Part {I}},
  series       = {Lecture Notes in Computer Science},
  volume       = {14681},
  pages        = {133--152},
  publisher    = {Springer},
  year         = {2024},
  doi          = {10.1007/978-3-031-65627-9\_7},
}

@inproceedings{leanmlir,
  doi = {10.4230/LIPICS.ITP.2024.9},
  url = {https://drops.dagstuhl.de/entities/document/10.4230/LIPIcs.ITP.2024.9},
  author = {Bhat,  Siddharth and Keizer,  Alex and Hughes,  Chris and Goens,  Andrés and Grosser,  Tobias},
  keywords = {compilers,  semantics,  mechanization,  MLIR,  SSA,  regions,  peephole rewrites,  Software and its engineering → Compilers,  Software and its engineering → Semantics,  Computing methodologies → Theorem proving algorithms,  Theory of computation → Rewrite systems},
  language = {en},
  title = {Verifying Peephole Rewriting in SSA Compiler IRs},
  publisher = {Schloss Dagstuhl – Leibniz-Zentrum f\"{u}r Informatik},
  year = {2024},
  copyright = {Creative Commons Attribution 4.0 International license}
}

@InProceedings{bitwuzlacegar,
author="Niemetz, Aina
and Preiner, Mathias
and Zohar, Yoni",
editor="Gurfinkel, Arie
and Ganesh, Vijay",
title="Scalable Bit-Blasting with Abstractions",
booktitle="Computer Aided Verification",
year="2024",
publisher="Springer Nature Switzerland",
address="Cham",
pages="178--200",
abstract="The dominant state-of-the-art approach for solving bit-vector formulas in Satisfiability Modulo Theories (SMT) is bit-blasting, an eager reduction to propositional logic. Bit-blasting is surprisingly efficient in practice but does not generally scale well with increasing bit-widths, especially when bit-vector arithmetic is present. In this paper, we present a novel CEGAR-style abstraction-refinement procedure for the theory of fixed-size bit-vectors that significantly improves the scalability of bit-blasting. We provide lemma schemes for various arithmetic bit-vector operators and an abduction-based framework for synthesizing refinement lemmas. We extended the state-of-the-art SMT solver Bitwuzla with our abstraction-refinement approach and show that it significantly improves solver performance on a variety of benchmark sets, including industrial benchmarks that arise from smart contract verification.",
isbn="978-3-031-65627-9"
}
